[assembly: System.Reflection.AssemblyMetadata("RepositoryUrl", "https://github.com/arika0093/Configuration.Writable")]
namespace Configuration.Writable
{
    public class WritableConfigYamlProvider : Configuration.Writable.WritableConfigProviderBase
    {
        public WritableConfigYamlProvider() { }
        public YamlDotNet.Serialization.IDeserializer Deserializer { get; init; }
        public System.Text.Encoding Encoding { get; init; }
        public override string FileExtension { get; }
        public YamlDotNet.Serialization.ISerializer Serializer { get; init; }
        public override T LoadConfiguration<T>(Configuration.Writable.WritableConfigurationOptions<T> options)
            where T :  class, new () { }
        public override T LoadConfiguration<T>(System.IO.Stream stream, Configuration.Writable.WritableConfigurationOptions<T> options)
            where T :  class, new () { }
        public override System.Threading.Tasks.Task SaveAsync<T>(T config, Configuration.Writable.WritableConfigurationOptions<T> options, System.Threading.CancellationToken cancellationToken = default)
            where T :  class, new () { }
    }
}