[assembly: System.Reflection.AssemblyMetadata("RepositoryUrl", "https://github.com/arika0093/Configuration.Writable")]
namespace Configuration.Writable
{
    public static class WritableConfig
    {
        public static Configuration.Writable.IWritableOptions<T> GetOptions<T>()
            where T :  class { }
        public static void Initialize<T>()
            where T :  class { }
        public static void Initialize<T>(System.Action<Configuration.Writable.WritableConfigurationOptionsBuilder<T>> configurationOptions)
            where T :  class { }
    }
    public class WritableOptionsSimpleInstance<T>
        where T :  class
    {
        public WritableOptionsSimpleInstance() { }
        public void Add(Configuration.Writable.WritableConfigurationOptionsBuilder<T> configurationBuilder) { }
        public void Add(System.Action<Configuration.Writable.WritableConfigurationOptionsBuilder<T>> configurationOptions) { }
        public Configuration.Writable.IWritableOptions<T> GetOptions() { }
        public void Initialize() { }
        public void Initialize(Configuration.Writable.WritableConfigurationOptionsBuilder<T> configurationBuilder) { }
        public void Initialize(System.Action<Configuration.Writable.WritableConfigurationOptionsBuilder<T>> configurationOptions) { }
    }
    public static class WritableConfigurationExtensions
    {
        public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddWritableOptions<T>(this Microsoft.Extensions.DependencyInjection.IServiceCollection services)
            where T :  class { }
        public static Microsoft.Extensions.Hosting.IHostApplicationBuilder AddWritableOptions<T>(this Microsoft.Extensions.Hosting.IHostApplicationBuilder builder)
            where T :  class { }
        public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddWritableOptions<T>(this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Configuration.Writable.WritableConfigurationOptionsBuilder<T> confBuilder)
            where T :  class { }
        public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddWritableOptions<T>(this Microsoft.Extensions.DependencyInjection.IServiceCollection services, System.Action<Configuration.Writable.WritableConfigurationOptionsBuilder<T>> configureOptions)
            where T :  class { }
        public static Microsoft.Extensions.Hosting.IHostApplicationBuilder AddWritableOptions<T>(this Microsoft.Extensions.Hosting.IHostApplicationBuilder builder, System.Action<Configuration.Writable.WritableConfigurationOptionsBuilder<T>> configureOptions)
            where T :  class { }
    }
}